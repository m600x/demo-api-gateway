name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CONTAINER_NAME: demo-api-gateway
  CONTAINER_TAG: ci

jobs:
  app-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -v

  kubernetes-test:
    runs-on: ubuntu-latest
    needs: app-test
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Build image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }}

      - name: Ensure docker image is available
        run: docker image ls

      - name: Create kind cluster
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: kind

      - name: Load image into kind
        run: kind load docker-image $CONTAINER_NAME:$CONTAINER_TAG

      - name: Kubernetes YAML - Deploy CI image
        run: |
          kubectl set image -f kubernetes/deployment.yaml $CONTAINER_NAME=$CONTAINER_NAME:$CONTAINER_TAG --local -o yaml | kubectl apply -f -
          kubectl apply -f kubernetes/service.yaml
          kubectl rollout status deploy/demo-api-gateway --timeout=120s
          kubectl get deployments -A
          kubectl get services -A

      - name: Helm - Test chart installation
        run: |
          helm lint demo-api-gateway
          helm install demo demo-api-gateway --set image.repository=$CONTAINER_NAME --set image.tag=$CONTAINER_TAG
          kubectl rollout status deploy/demo-demo-api-gateway --timeout=120s
          kubectl get deployments -A
          kubectl get services -A

      - name: Helm - Forward port locally and test liveness
        run: |
          kubectl port-forward svc/demo-demo-api-gateway 8080:8080 >/tmp/pf.log 2>&1 &
          FORWARDER_PID=$!
          for i in $(seq 1 15); do
            if curl -fsS http://127.0.0.1:8080/ >/dev/null; then
              break
            fi
            sleep 2
          done
          curl -fS http://127.0.0.1:8080/
          curl -fS http://127.0.0.1:8080/logs
          curl -fS http://127.0.0.1:8080/history
          kill $FORWARDER_PID || true
          helm uninstall demo

  build-and-push:
    runs-on: ubuntu-latest
    needs: kubernetes-test
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.CONTAINER_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}